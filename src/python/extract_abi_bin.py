import argparse
import json
import os
import sys
import logging
import errno

def parse_args():
    parser = argparse.ArgumentParser(description='Extract ABI and bytecode from JSON generated by Truffle.')
    parser.add_argument('--contract-dir', dest='contract_dir', help='location of the contracts', required = True)
    parser.add_argument('--abi-outdir', dest='abi_outdir', help='location of the ABIs (default: <contract_dir>/abi', default = None)
    parser.add_argument('--bin-outdir', dest='bin_outdir', help='location of the bins (default: <contract_dir>/bin', default = None)

    args = parser.parse_args()

    if args.abi_outdir is None:
        args.abi_outdir = args.contract_dir + '/abi'
    if args.bin_outdir is None:
        args.bin_outdir = args.contract_dir + '/bin'

    return args

def get_json(contract_file):
    fp = open(contract_file)
    return json.load(fp)

def get_abi(json_blob):
    return json_blob['abi']

def get_bin(json_blob):
    return json_blob['bytecode']

def mkdir(path):
    try:
        os.mkdir(path)
        logging.warning("Created dir: %s\n" % path)
    except OSError as e:
        if e.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else:
            raise

def write_json(to_file, json_blob, get_section_cb):
    logging.warning("Writing file: %s\n" % to_file)
    json_section = get_section_cb(json_blob)
    fp = open(to_file, "w")
    json.dump(json_section, fp)
    fp.close()

def process_files(contract_dir, abi_outdir, bin_outdir):
    contract_files = [f for f in os.listdir(contract_dir) if f.endswith('.json')]

    mkdir(abi_outdir)
    mkdir(bin_outdir)

    for contract in contract_files:
        basename = contract[:-5] 
        abi_filepath = abi_outdir + '/' + basename + '.abi'
        bin_filepath = bin_outdir + '/' + basename + '.bin'
        contract = contract_dir + '/' + contract
        json_blob = get_json(contract) 

        write_json(abi_filepath, json_blob, get_abi)
        write_json(bin_filepath, json_blob, get_bin)

if __name__ == '__main__':
    args = parse_args()
    process_files(args.contract_dir, args.abi_outdir, args.bin_outdir)
